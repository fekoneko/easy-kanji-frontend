@layer form {
  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  fieldset {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border: none;
  }
  fieldset:has(textarea) > label,
  fieldset:has(.arrayInputs) > label {
    align-self: normal;
    margin-top: 0.5rem;
  }

  fieldset > label {
    flex: 1 1 1rem;
    text-align: left;
  }
  fieldset > label:first-child {
    max-width: 6rem;
  }

  fieldset > textarea,
  fieldset > input,
  .arrayInputsContainer > div {
    flex: 2 1 1rem;
  }

  form button {
    padding: 0.5rem;
  }

  textarea,
  input {
    width: 100%;
    padding: 0.5rem 0.8rem;
    background-color: var(--bg-color);
  }
  textarea {
    min-height: 10rem;
  }
  textarea:-webkit-autofill,
  input:-webkit-autofill,
  textarea:-webkit-autofill:hover,
  input:-webkit-autofill:hover,
  textarea:-webkit-autofill:focus,
  input:-webkit-autofill:focus,
  textarea:-webkit-autofill:active,
  input:-webkit-autofill:active {
    -webkit-text-fill-color: var(--bg-color);
    -webkit-text-fill-color: var(--primary-text-color);
    transition: background-color 5000s ease-in-out 0s;
  }

  textarea[aria-invalid='true'],
  input[aria-invalid='true'] {
    border-color: var(--invalid-field-color) !important;
  }

  button,
  textarea,
  input {
    background-color: var(--bg-color);
    font: inherit;
    border: var(--border-style);
    color: inherit;
  }
  button:focus,
  textarea:focus,
  input:focus {
    outline: none;
    border: var(--focus-border-style);
  }
  button:disabled,
  textarea:disabled,
  input:disabled {
    outline: none;
    border: var(--disabled-border-style);
    color: var(--disabled-color);
    background-color: var(--disabled-bg-color);
  }
  label[aria-disabled='true'] {
    color: var(--disabled-color);
  }
  button {
    transition: background-color var(--transition-params);
  }
  button:hover,
  button:focus {
    background-color: var(--hover-color);
  }
  input[type='checkbox'] {
    flex: 0 0 !important;
  }

  .arrayInputsContainer > div {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
  }
  .arrayInputs {
    display: flex;
    align-items: stretch;
    flex-wrap: wrap;
    gap: 0.2rem;
  }
  .arrayInputs > * {
    flex: 1 1;
    min-width: 5rem;
  }
  .arrayInputsButtons {
    display: flex;
    justify-content: center;
    gap: 0.2rem;
    min-width: 100%;
  }
  .arrayInputsButtons button {
    width: 2rem;
    height: 2rem;
    font-size: 1.2rem;
    padding: 0;
    border: none;
  }

  button .loadingSpinner {
    zoom: 0.4;
  }

  .controlButton {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2.1rem;
    height: 2.1rem;
    border: none !important;
    background-color: transparent !important;
    padding: 0.5rem;
  }
  .controlButton > svg {
    fill: var(--primary-text-color);
  }
  .controlButton:hover > svg {
    fill: var(--primary-color);
  }
  .controlButton:has(.loadingSpinner) {
    padding: 0;
  }

  .kanjiWritingInput {
    max-width: 5rem;
    height: 3rem;
    font-size: 1.5rem;
    text-align: center;
  }
}
